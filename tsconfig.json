{
  "compilerOptions": {
    // Build Optimizations
    "incremental": true, // Enables incremental compilation for faster builds
    "skipLibCheck": true, // Skip type checking of declaration files for better performance
    "removeComments": true, // Removes comments from output files to reduce size
    "importHelpers": true, // Import helpers from tslib to reduce bundle size
    "allowImportingTsExtensions": true,
    "ignoreDeprecations": "6.0", // Silence baseUrl deprecation warning

    // Type Checking
    "strict": true, // Enable all strict type checking options
    "noUnusedLocals": true, // Report errors on unused local variables
    "noUnusedParameters": true, // Report errors on unused parameters
    "noImplicitReturns": true, // Ensure all code paths return in functions
    "noFallthroughCasesInSwitch": true, // Prevent accidental fallthrough in switch statements
    "exactOptionalPropertyTypes": true, // More precise optional property types

    // React Specific (if using React)
    "jsx": "react-jsx", // Support JSX without importing React
    "lib": ["DOM", "DOM.Iterable", "ESNext"], // Include necessary library files

    // Module Resolution
    "moduleResolution": "Bundler", // Modern module resolution for bundlers
    "baseUrl": "src/", // Base directory for module resolution (deprecated but still functional)
    "esModuleInterop": true, // Better interop between different module systems
    "allowSyntheticDefaultImports": true, // Allow default imports from modules without exports

    // Output Configuration
    "target": "ESNext", // Latest ECMAScript features
    "module": "ESNext", // Use modern module system
    "outDir": "dist/", // Output directory for compiled files
    "sourceMap": false, // Disable source maps in production

    // Additional Safety
    "forceConsistentCasingInFileNames": true, // Ensure consistent casing in imports
    "isolatedModules": true, // Ensure each file can be safely transpiled
    "resolveJsonModule": true, // Allow importing JSON files as modules
    "pretty": true,
    "useDefineForClassFields": true,
    "allowJs": true,
    "noEmit": true,
    "paths": {
      "@/*": ["./src/*"],
      "@components/*": ["src/Components/*"],
      "@Pages/*": ["src/Pages/*"],
      "@utils/*": ["src/utils/*"]
    }
  },
  "include": [
    "src/**/*", // Include all files in src
    "tests/**/*", // Include all test files
    "*.config.{js,ts}" // Include config files
  ],
  "exclude": [
    "node_modules", // Exclude node_modules
    "**/*.spec.ts", // Exclude test files
    "dist", // Exclude output directory
    "coverage", // Exclude test coverage
    "**/*.test.ts", // Exclude test files
    "**/__mocks__/*" // Exclude mock files
  ],
  "references": [{ "path": "./tsconfig.node.json" }],
  "resolve": {
    "alias": {
      "@": "/src"
    }
  }
}
//  Note: tsconfig.json is a configuration file containing a single object that allows you to customize
//  how your TypeScript compiler compiles the TypeScript files to JavaScript files and specifies the root files.

// "compilerOptions" which has several properties that define how the compilation process is done.

// Note: TypeScript cannot be run in the browser on its own, it must be compiled into JavaScript first using the TypeScript compiler,
// called tsc compiler, which requires some configuration.

// {
//   "compilerOptions": {
//       /* Basic Options */

//       "target": "es5" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */,
//       "module": "commonjs" /* Specify module code generation: 'commonjs', 'and', 'system', 'umd' or 'es2015'. */,
//       "lib": [] /* Specify library files to be included in the compilation:  */,
//       "allowJs": true /* Allow JavaScript files to be compiled. */,
//       "checkJs": true /* Report errors in .js files. */,
//       "jsx": "preserve" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
//       "declaration": true /* Generates corresponding '.d.ts' file. */,
//       "sourceMap": true /* Generates corresponding '.map' file. */,
//       "outFile": "./" /* Concatenate and emit output to a single file. */,
//       "outDir": "./" /* Redirect output structure to the directory. */,
//       "rootDir": "./" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
//       "removeComments": true /* Do not emit comments to output. */,
//       "noEmit": true /* Do not emit outputs. */,
//       "importHelpers": true /* Import emit helpers from 'tslib'. */,
//       "downlevelIteration": true /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */,
//       "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,

//       /* Strict Type-Checking Options */

//       "strict": true /* Enable all strict type-checking options. */,
//       "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
//       "strictNullChecks": true /* Enable strict null checks. */,
//       "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
//       "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,

//       /* Additional Checks */

//       "noUnusedLocals": true /* Report errors on unused locals. */,
//       "noUnusedParameters": true /* Report errors on unused parameters. */,
//       "noImplicitReturns": true /* Report error when not all code paths in the function return a value. */,
//       "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in a switch statement. */,

//       /* Module Resolution Options */

//       "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
//       "baseUrl": "./" /* Base directory to resolve non-absolute module names. */,
//       "paths": {} /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */,
//       "rootDirs": [] /* List of root folders whose combined content represents the structure of the project at runtime. */,
//       "typeRoots": [] /* List of folders to include type definitions from. */,
//       "types": [] /* Type declaration files to be included in the compilation. */,
//       "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,

//       /* Source Map Options */

//       "sourceRoot": "./" /* Specify the location where the debugger should locate TypeScript files instead of source locations. */,
//       "mapRoot": "./" /* Specify the location where the debugger should locate map files instead of generated locations. */,
//       "inlineSourceMap": true /* Emit a single file with source maps instead of having a separate file. */,
//       "inlineSources": true /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */,

//       /* Experimental Options */

//       "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
//       "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */
//   }
// }
